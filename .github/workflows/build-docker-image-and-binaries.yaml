name: Upload Binaries and Docker Image

on:
  workflow_dispatch:

jobs:
  release-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version:
          - 1.17
        os: [ubuntu-20.04]
        arch: [amd64]

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: recursive

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Init rocksdb
        run: |
          sudo apt install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
          git clone https://github.com/facebook/rocksdb.git
          cd rocksdb
          git checkout v6.16.3
          export CXXFLAGS='-Wno-error=deprecated-copy -Wno-error=pessimizing-move -Wno-error=class-memaccess'
          sudo make shared_lib
          sudo make install-shared INSTALL_PATH=/usr
          sudo echo 'export LD_LIBRARY_PATH=/usr/local/lib' >> $HOME/.bashrc

      - name: Build and sign binaries
        run: |
          ulimit -n 16384
          make build
          mv ./bin/axelard ./bin/axelard-v0.10.7

      - name: Upload binaries to custom S3
        env:
          S3_PATH: s3://axelar-rocksdb
        run: |
          aws s3 cp ./bin ${S3_PATH}/ --recursive
